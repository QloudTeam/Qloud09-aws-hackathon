AWSTemplateFormatVersion: '2010-09-09'
Description: 'ACEO - 배송 엔지니어: 애플리케이션 중심의 제어형 탄력적 운영자를 위한 CI/CD 파이프라인'

Parameters:
  ProjectName:
    Type: String
    Default: aceo-delivery
    Description: 프로젝트 이름

Resources:
  # S3 버킷 - 아티팩트 저장
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-artifacts-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # CodeCommit 리포지토리
  CodeRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub '${ProjectName}-repo'
      RepositoryDescription: 'ACEO 배송 엔지니어 애플리케이션 리포지토리'

  # CodeBuild 프로젝트
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}-build'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo 빌드 시작
                - npm install
            build:
              commands:
                - echo 빌드 실행
                - npm run build
            post_build:
              commands:
                - echo 빌드 완료
          artifacts:
            files:
              - '**/*'

  # CodePipeline
  DeliveryPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${ProjectName}-pipeline'
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                RepositoryName: !GetAtt CodeRepository.Name
                BranchName: main
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk
                Version: '1'
              Configuration:
                ApplicationName: !Ref EBApplication
                EnvironmentName: !Ref EBEnvironment
              InputArtifacts:
                - Name: BuildOutput

  # Elastic Beanstalk 애플리케이션
  EBApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Sub '${ProjectName}-app'
      Description: 'ACEO 배송 엔지니어 애플리케이션'

  # Elastic Beanstalk 환경
  EBEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref EBApplication
      EnvironmentName: !Sub '${ProjectName}-env'
      SolutionStackName: '64bit Amazon Linux 2 v5.8.0 running Node.js 18'
      OptionSettings:
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: '1'
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '4'
        - Namespace: aws:ec2:instances
          OptionName: InstanceTypes
          Value: t3.micro

  # IAM 역할들
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk

Outputs:
  PipelineUrl:
    Description: 'CodePipeline 콘솔 URL'
    Value: !Sub 'https://console.aws.amazon.com/codesuite/codepipeline/pipelines/${DeliveryPipeline}/view'
  
  ApplicationUrl:
    Description: '배포된 애플리케이션 URL'
    Value: !Sub 'http://${EBEnvironment}.${AWS::Region}.elasticbeanstalk.com'
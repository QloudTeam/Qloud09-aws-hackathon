AWSTemplateFormatVersion: '2010-09-09'
Description: 'ACRO - 엣지 가디언: 애플리케이션 중심의 제어형 안정적 운영자를 위한 엣지 보안 시스템'

Parameters:
  ProjectName:
    Type: String
    Default: acro-edge
    Description: 프로젝트 이름

Resources:
  # S3 버킷 - 정적 웹사이트
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-website-${AWS::AccountId}'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  # S3 버킷 정책
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub '${WebsiteBucket}/*'

  # WAF Web ACL
  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub '${ProjectName}-waf'
      Scope: CLOUDFRONT
      DefaultAction:
        Allow: {}
      Rules:
        - Name: AWSManagedRulesCommonRuleSet
          Priority: 1
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: CommonRuleSetMetric
        - Name: AWSManagedRulesKnownBadInputsRuleSet
          Priority: 2
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: KnownBadInputsRuleSetMetric
        - Name: RateLimitRule
          Priority: 3
          Action:
            Block: {}
          Statement:
            RateBasedStatement:
              Limit: 2000
              AggregateKeyType: IP
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: RateLimitRuleMetric

  # CloudFront Origin Access Control
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${ProjectName}-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          Compress: true
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingOptimized
        WebACLId: !GetAtt WebACL.Arn
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  # CloudWatch 알람 - 4xx 에러율
  HighErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-high-4xx-error-rate'
      AlarmDescription: '4xx 에러율이 높을 때 알림'
      MetricName: 4xxErrorRate
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
      AlarmActions:
        - !Ref SNSTopic

  # CloudWatch 알람 - 오리진 지연시간
  HighLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-high-origin-latency'
      AlarmDescription: '오리진 응답 시간이 높을 때 알림'
      MetricName: OriginLatency
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 3000
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
      AlarmActions:
        - !Ref SNSTopic

  # SNS 토픽
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${ProjectName}-alerts'
      DisplayName: 'ACRO 엣지 가디언 알림'

  # Lambda 함수 - 보안 로그 분석
  SecurityLogAnalyzer:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-security-analyzer'
      Runtime: python3.9
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import json
          import boto3
          
          def lambda_handler(event, context):
              # WAF 로그 분석 로직
              print("보안 로그 분석 시작")
              
              # CloudWatch 메트릭 전송
              cloudwatch = boto3.client('cloudwatch')
              cloudwatch.put_metric_data(
                  Namespace='ACRO/Security',
                  MetricData=[
                      {
                          'MetricName': 'SecurityAnalysisCompleted',
                          'Value': 1,
                          'Unit': 'Count'
                      }
                  ]
              )
              
              return {
                  'statusCode': 200,
                  'body': json.dumps('보안 분석 완료')
              }

  # Lambda 실행 역할
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/CloudWatchFullAccess

  # EventBridge 규칙 - 정기적 보안 분석
  SecurityAnalysisSchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub '${ProjectName}-security-schedule'
      Description: '매시간 보안 분석 실행'
      ScheduleExpression: 'rate(1 hour)'
      State: ENABLED
      Targets:
        - Arn: !GetAtt SecurityLogAnalyzer.Arn
          Id: SecurityAnalyzerTarget

  # Lambda 권한 - EventBridge
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SecurityLogAnalyzer
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt SecurityAnalysisSchedule.Arn

Outputs:
  WebsiteURL:
    Description: 'CloudFront 배포 URL'
    Value: !Sub 'https://${CloudFrontDistribution.DomainName}'
  
  S3BucketName:
    Description: 'S3 버킷 이름'
    Value: !Ref WebsiteBucket
  
  WAFWebACLId:
    Description: 'WAF Web ACL ID'
    Value: !Ref WebACL
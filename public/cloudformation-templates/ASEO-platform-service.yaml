AWSTemplateFormatVersion: '2010-09-09'
Description: 'ASEO - 앱 오퍼레이터: Elastic Beanstalk + RDS + SES 플랫폼'

Parameters:
  ApplicationName:
    Type: String
    Default: ASEO-WebApp
    Description: Elastic Beanstalk 애플리케이션 이름

Resources:
  # Elastic Beanstalk Application
  EBApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Ref ApplicationName
      Description: ASEO 앱 오퍼레이터 플랫폼 서비스

  # Elastic Beanstalk Environment
  EBEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref EBApplication
      EnvironmentName: !Sub '${ApplicationName}-prod'
      SolutionStackName: "64bit Amazon Linux 2 v5.8.0 running Node.js 18"
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: t3.micro
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: 1
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: 4
        - Namespace: aws:elasticbeanstalk:healthreporting:system
          OptionName: SystemType
          Value: enhanced

  # RDS Database
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS
      SubnetIds:
        - subnet-12345678  # 실제 서브넷 ID로 교체 필요
        - subnet-87654321  # 실제 서브넷 ID로 교체 필요
      Tags:
        - Key: Name
          Value: ASEO-DB-SubnetGroup

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: aseo-database
      DBInstanceClass: db.t3.micro
      Engine: mysql
      EngineVersion: 8.0.35
      MasterUsername: admin
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:password}}'
      AllocatedStorage: 20
      StorageType: gp2
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      BackupRetentionPeriod: 7
      MultiAZ: false
      PubliclyAccessible: false
      DeletionProtection: false
      Tags:
        - Key: Name
          Value: ASEO-RDS

  # RDS Security Group
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS
      VpcId: vpc-12345678  # 실제 VPC ID로 교체 필요
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EBSecurityGroup
      Tags:
        - Key: Name
          Value: ASEO-RDS-SG

  # Elastic Beanstalk Security Group
  EBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Elastic Beanstalk
      VpcId: vpc-12345678  # 실제 VPC ID로 교체 필요
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ASEO-EB-SG

  # Database Secret
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: ASEO-DB-Secret
      Description: RDS database credentials
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\'

  # SES Email Identity
  SESEmailIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: noreply@example.com  # 실제 도메인으로 교체 필요

  # SES Configuration Set
  SESConfigurationSet:
    Type: AWS::SES::ConfigurationSet
    Properties:
      Name: ASEO-ConfigSet

  # CloudWatch Log Group
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/elasticbeanstalk/${ApplicationName}/var/log/eb-engine.log'
      RetentionInDays: 14

  # IAM Role for Elastic Beanstalk
  EBServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: elasticbeanstalk.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy
      Policies:
        - PolicyName: SESAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource: '*'

  # IAM Instance Profile
  EBInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EBInstanceRole

  EBInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
      Policies:
        - PolicyName: RDSAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - rds:DescribeDBInstances
                  - secretsmanager:GetSecretValue
                Resource: '*'

Outputs:
  ApplicationURL:
    Description: Elastic Beanstalk 애플리케이션 URL
    Value: !Sub 'http://${EBEnvironment.EndpointURL}'
    Export:
      Name: !Sub '${AWS::StackName}-AppURL'

  RDSEndpoint:
    Description: RDS 데이터베이스 엔드포인트
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-RDSEndpoint'

  SESIdentity:
    Description: SES 이메일 아이덴티티
    Value: !Ref SESEmailIdentity
    Export:
      Name: !Sub '${AWS::StackName}-SESIdentity'